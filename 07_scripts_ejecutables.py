# Archivo: 07_scripts_ejecutables.py
# Tema: Scripts ejecutables en Python
# DescripciÃ³n: Este script explica cÃ³mo crear y ejecutar scripts de Python como archivos ejecutables desde la terminal, incluyendo el uso de la lÃ­nea shebang y permisos en sistemas Linux.

# -------------------------------
# ğŸ“Œ 1. Â¿QuÃ© es un script ejecutable?
# -------------------------------
# Un script ejecutable es un archivo que se puede ejecutar directamente desde la terminal sin necesidad de invocar explÃ­citamente el intÃ©rprete de Python.

# -------------------------------
# ğŸ“Œ 2. LÃ­nea Shebang (#!)
# -------------------------------
# La lÃ­nea shebang se coloca al inicio del archivo para indicar quÃ© intÃ©rprete debe usarse.
# En sistemas Unix/Linux, se usa comÃºnmente:
#   #!/usr/bin/env python3

# Ejemplo de script ejecutable:
# --------------------------------
# #!/usr/bin/env python3
# print("Â¡Hola! Este script es ejecutable desde la terminal.")

# -------------------------------
# ğŸ“Œ 3. Hacer el archivo ejecutable (Linux/macOS)
# -------------------------------
# 1. Guardar el archivo con extensiÃ³n .py, por ejemplo: hola.py
# 2. Dar permisos de ejecuciÃ³n con el comando:
#    chmod +x hola.py
# 3. Ejecutar el script directamente:
#    ./hola.py

# -------------------------------
# ğŸ“Œ 4. Consideraciones en Windows
# -------------------------------
# En Windows, los scripts .py se ejecutan con:
#    python hola.py
# TambiÃ©n se puede asociar la extensiÃ³n .py con el intÃ©rprete de Python para doble clic.

# -------------------------------
# ğŸ“Œ 5. Ejemplo prÃ¡ctico
# -------------------------------

def main():
    """FunciÃ³n principal del script."""
    print("Este script puede ejecutarse directamente si tiene permisos y lÃ­nea shebang.")

# Punto de entrada del script
if __name__ == "__main__":
    main()

# -------------------------------
# âœ… ConclusiÃ³n
# -------------------------------
# Para crear scripts ejecutables en Python:
# - AÃ±ade la lÃ­nea shebang al inicio del archivo.
# - Da permisos de ejecuciÃ³n en sistemas Unix/Linux.
# - Usa `if __name__ == "__main__"` para definir el punto de entrada.
# Esto permite ejecutar tus scripts de forma mÃ¡s flexible y profesional.

# Fin del archivo
